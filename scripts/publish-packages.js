const { execSync } = require('node:child_process');
const fs = require('node:fs');
const path = require('node:path');
const { globSync } = require('glob');

console.log('üöÄ Publishing packages to npm...');

const packageFiles = globSync('packages/*/package.json', { absolute: true });

packageFiles.forEach(filePath => {
  const packageDir = path.dirname(filePath);
  const packageJson = JSON.parse(fs.readFileSync(filePath, 'utf8'));
  
  console.log(`\nüì¶ Publishing ${packageJson.name}@${packageJson.version}...`);
  
  try {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø–∞–∫–µ—Ç–∞ –∏ –ø—É–±–ª–∏–∫—É–µ–º
    process.chdir(packageDir);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ NPM_TOKEN –≤ CI –æ–∫—Ä—É–∂–µ–Ω–∏–∏
    if (process.env.CI && !process.env.NODE_AUTH_TOKEN && !process.env.NPM_TOKEN) {
      console.warn('‚ö†Ô∏è  Warning: No NPM_TOKEN or NODE_AUTH_TOKEN found in CI environment');
    }
    
    execSync('npm publish --access public', { 
      stdio: 'inherit',
      env: {
        ...process.env,
        // NODE_AUTH_TOKEN –∏–º–µ–µ—Ç –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ GitHub Actions
        NPM_TOKEN: process.env.NODE_AUTH_TOKEN || process.env.NPM_TOKEN
      }
    });
    console.log(`‚úÖ Successfully published ${packageJson.name}@${packageJson.version}`);
  } catch (error) {
    console.error(`‚ùå Failed to publish ${packageJson.name}:`, error.message);
    process.exit(1);
  }
});

console.log('\nüéâ All packages published successfully!'); 